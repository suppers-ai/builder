{
  "nodeModulesDir": "auto",
  "workspace": [
    "packages/compiler",
    "packages/ui-lib",
    "packages/docs",
    "packages/shared",
    "packages/api",
    "packages/auth-client",
    "packages/store",
    "packages/profile",
    "packages/cdn",
    "packages/templates/fresh-basic"
  ],
  "imports": {
    "@fresh/core": "jsr:@fresh/core@2.0.0-alpha.52",
    "@std/path": "jsr:@std/path@^1.1.1",
    "@std/dotenv": "jsr:@std/dotenv@^0.225.5",
    "@std/crypto": "jsr:@std/crypto@^1.0.5",
    "@std/encoding": "jsr:@std/encoding@^1.0.10",
    "@std/uuid": "jsr:@std/uuid@^1.0.9",
    "@std/fs": "jsr:@std/fs@^1.0.19",
    "fresh": "jsr:@fresh/core@2.0.0-alpha.52",
    "tailwindcss": "npm:tailwindcss@4.1.11",
    "@fresh/plugin-tailwind": "jsr:@fresh/plugin-tailwind@^0.0.1-alpha.9",
    "@supabase/supabase-js": "https://esm.sh/@supabase/supabase-js@2.50.3",
    "preact": "npm:preact@10.26.9",
    "preact/": "npm:preact@10.26.9/",
    "preact/hooks": "npm:preact@10.26.9/hooks",
    "preact/jsx-runtime": "npm:preact@10.26.9/jsx-runtime",
    "preact/jsx-dev-runtime": "npm:preact@10.26.9/jsx-dev-runtime",
    "preact-render-to-string": "npm:preact-render-to-string@6.5.11",
    "@preact/signals": "npm:@preact/signals@2.2.1",
    "@playwright/test": "npm:@playwright/test@1.54.1",
    "@preact/signals-core": "npm:@preact/signals-core@1.8.0",
    "zod": "https://esm.sh/zod@3.25.1",
    "lucide-preact": "https://esm.sh/lucide-preact@0.460.0",
    "$fresh/runtime": "jsr:@fresh/core@2.0.0-alpha.52/runtime"
  },
  "tasks": {
    "dev": "deno task --config packages/compiler/deno.json dev",
    "build": "deno run --allow-all packages/compiler/cli.ts build",
    "test": "deno test --allow-all",
    "test:watch": "deno test --allow-all --watch",
    "test:coverage": "deno test --allow-all --coverage=coverage",
    "lint": "deno lint",
    "fmt": "deno fmt",
    "fmt:check": "deno fmt --check",
    "generate": "deno run --allow-all packages/compiler/cli.ts",
    "generate:blog": "deno run --allow-all packages/compiler/cli.ts generate my-blog",
    "setup": "deno run --allow-all scripts/setup.ts",
    "clean": "deno run --allow-all scripts/clean.ts",
    "check": "deno check **/*.ts **/*.tsx",
    "check:all": "deno task check && deno task lint && deno task fmt:check",
    "dev:basic": "cd packages/templates/fresh-basic && deno task start",
    "dev:ui": "cd packages/docs && deno task start",
    "dev:api-local": "cd packages/api && deno task dev",
    "dev:store": "cd packages/store && deno task dev",
    "dev:profile": "cd packages/profile && deno task dev",
    "dev:cdn": "cd packages/cdn && deno task dev",
    "dev:both": "deno run --allow-all scripts/dev-concurrent.ts",
    "start:store": "cd packages/store && deno task start",
    "start:profile": "cd packages/profile && deno task start",
    "start:cdn": "cd packages/cdn && deno task start",
    "build:store": "cd packages/store && deno task build",
    "build:profile": "cd packages/profile && deno task build",
    "build:cdn": "cd packages/cdn && deno task build",
    "build:both": "deno task build:store && deno task build:profile",
    "test:store": "cd packages/store && deno task test",
    "test:profile": "cd packages/profile && deno task test",
    "test:cdn": "cd packages/cdn && deno task test",
    "test:both": "deno task test:store && deno task test:profile",
    "check:store": "cd packages/store && deno task check",
    "check:profile": "cd packages/profile && deno task check",
    "check:cdn": "cd packages/cdn && deno task check",
    "check:both": "deno task check:store && deno task check:profile",
    "store:build": "cd packages/store && deno task build",
    "store:preview": "cd packages/store && deno task preview",
    "cdn:build": "cd packages/cdn && deno task build",
    "cdn:preview": "cd packages/cdn && deno task start",
    "ui:build": "cd packages/docs && deno task build",
    "ui:preview": "cd packages/docs && deno task preview",
    "profile:build": "cd packages/profile && deno task build",
    "profile:preview": "cd packages/profile && deno task preview",
    "api:deploy": "cd packages/api && deno task deploy",
    "api:deploy:api": "cd packages/api && deno task deploy:api",
    "api:deploy:oauth": "cd packages/api && deno task deploy:oauth",
    "api:logs": "cd packages/api && deno task logs",
    "api:logs:authorize": "cd packages/api && deno task logs:authorize",
    "api:logs:callback": "cd packages/api && deno task logs:callback",
    "api:reset": "cd packages/api && deno task reset",
    "api:types": "cd packages/api && deno task types",
    "cache": "deno cache --reload packages/**/*.ts"
  },
  "fmt": {
    "options": {
      "indentWidth": 2,
      "lineWidth": 100,
      "semiColons": true
    },
    "include": [
      "packages/",
      "scripts/",
      "sites/"
    ],
    "exclude": [
      "packages/templates/*/fresh.gen.ts",
      "ui-lib/",
      "compiler/"
    ]
  },
  "lint": {
    "rules": {
      "tags": [
        "recommended"
      ]
    },
    "include": [
      "packages/",
      "scripts/"
    ],
    "exclude": [
      "packages/templates/*/fresh.gen.ts",
      "ui-lib/",
      "compiler/"
    ]
  },
  "test": {
    "include": [
      "packages/*/test/",
      "packages/**/*.test.ts"
    ]
  },
  "compilerOptions": {
    "lib": [
      "dom",
      "dom.asynciterable",
      "deno.ns"
    ],
    "jsx": "react-jsx",
    "jsxImportSource": "preact"
  },
  "unstable": [
    "kv",
    "cron"
  ]
}