// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "fmt"

type ExtensionDashboardProps struct {
	ExtensionName string
	ExtensionIcon string
	Version       string
	Description   string
	Stats         []ExtensionStatCard
	TabContent    templ.Component
	ActiveTab     string
	Tabs          []DashboardTab
}

type ExtensionStatCard struct {
	Label  string
	Value  string
	Icon   string
	Color  string // "blue", "green", "purple", "orange", "red"
	Change string // e.g., "+12%"
	Trend  string // "up", "down", "neutral"
}

type DashboardTab struct {
	ID     string
	Label  string
	Icon   string
	Active bool
}

func ExtensionDashboard(props ExtensionDashboardProps) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"extension-dashboard\"><!-- Dashboard Header --><div class=\"dashboard-header\"><div class=\"header-content\"><div class=\"header-icon\"><i data-lucide=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(props.ExtensionIcon)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/components/extension_dashboard_base.templ`, Line: 38, Col: 56}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "\"></i></div><div class=\"header-info\"><h1 class=\"dashboard-title\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(props.ExtensionName)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/components/extension_dashboard_base.templ`, Line: 41, Col: 69}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</h1><p class=\"dashboard-description\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var4 string
		templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(props.Description)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/components/extension_dashboard_base.templ`, Line: 42, Col: 72}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</p><span class=\"version-badge\">v")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var5 string
		templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(props.Version)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/components/extension_dashboard_base.templ`, Line: 43, Col: 64}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "</span></div></div><div class=\"header-actions\"><button class=\"btn-secondary\" onclick=\"refreshDashboard()\"><i data-lucide=\"refresh-cw\"></i> Refresh</button> <button class=\"btn-secondary\" onclick=\"openExtensionSettings()\"><i data-lucide=\"settings\"></i> Settings</button></div></div><!-- Stats Grid -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if len(props.Stats) > 0 {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "<div class=\"stats-grid\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			for _, stat := range props.Stats {
				var templ_7745c5c3_Var6 = []any{"stat-card", fmt.Sprintf("stat-%s", stat.Color)}
				templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var6...)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "<div class=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var7 string
				templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var6).String())
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/components/extension_dashboard_base.templ`, Line: 1, Col: 0}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "\"><div class=\"stat-icon\"><i data-lucide=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var8 string
				templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(stat.Icon)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/components/extension_dashboard_base.templ`, Line: 64, Col: 54}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "\"></i></div><div class=\"stat-content\"><div class=\"stat-value\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var9 string
				templ_7745c5c3_Var9, templ_7745c5c3_Err = templ.JoinStringErrs(stat.Value)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/components/extension_dashboard_base.templ`, Line: 67, Col: 64}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var9))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "</div><div class=\"stat-label\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var10 string
				templ_7745c5c3_Var10, templ_7745c5c3_Err = templ.JoinStringErrs(stat.Label)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/components/extension_dashboard_base.templ`, Line: 68, Col: 64}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var10))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "</div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if stat.Change != "" {
					var templ_7745c5c3_Var11 = []any{"stat-change", fmt.Sprintf("trend-%s", stat.Trend)}
					templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var11...)
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "<div class=\"")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var12 string
					templ_7745c5c3_Var12, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var11).String())
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/components/extension_dashboard_base.templ`, Line: 1, Col: 0}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var12))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					if stat.Trend == "up" {
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "<i data-lucide=\"trending-up\"></i> ")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
					} else if stat.Trend == "down" {
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, "<i data-lucide=\"trending-down\"></i> ")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
					} else {
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, "<i data-lucide=\"minus\"></i> ")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 17, "<span>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var13 string
					templ_7745c5c3_Var13, templ_7745c5c3_Err = templ.JoinStringErrs(stat.Change)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/components/extension_dashboard_base.templ`, Line: 78, Col: 55}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var13))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 18, "</span></div>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 19, "</div></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 20, "</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 21, "<!-- Dashboard Tabs -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if len(props.Tabs) > 0 {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 22, "<div class=\"dashboard-tabs\"><div class=\"tabs-header\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			for _, tab := range props.Tabs {
				var templ_7745c5c3_Var14 = []any{"tab-button", templ.KV("active", tab.Active)}
				templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var14...)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 23, "<button class=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var15 string
				templ_7745c5c3_Var15, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var14).String())
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/components/extension_dashboard_base.templ`, Line: 1, Col: 0}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var15))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 24, "\" data-tab=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var16 string
				templ_7745c5c3_Var16, templ_7745c5c3_Err = templ.JoinStringErrs(tab.ID)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/components/extension_dashboard_base.templ`, Line: 94, Col: 45}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var16))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 25, "\" data-onclick=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var17 string
				templ_7745c5c3_Var17, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("switchDashboardTab('%s')", tab.ID))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/components/extension_dashboard_base.templ`, Line: 95, Col: 90}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var17))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 26, "\"><i data-lucide=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var18 string
				templ_7745c5c3_Var18, templ_7745c5c3_Err = templ.JoinStringErrs(tab.Icon)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/components/extension_dashboard_base.templ`, Line: 96, Col: 53}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var18))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 27, "\"></i> <span>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var19 string
				templ_7745c5c3_Var19, templ_7745c5c3_Err = templ.JoinStringErrs(tab.Label)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/components/extension_dashboard_base.templ`, Line: 97, Col: 45}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var19))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 28, "</span></button>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 29, "</div><div class=\"tabs-content\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = props.TabContent.Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 30, "</div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 31, "<!-- Simple content without tabs --> <div class=\"dashboard-content\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = props.TabContent.Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 32, "</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 33, "</div><style>\n        .extension-dashboard {\n            padding: 1.5rem;\n            max-width: 1400px;\n            margin: 0 auto;\n        }\n\n        .dashboard-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            margin-bottom: 2rem;\n            padding-bottom: 1.5rem;\n            border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n        }\n\n        .header-content {\n            display: flex;\n            align-items: center;\n            gap: 1.5rem;\n        }\n\n        .header-icon {\n            width: 60px;\n            height: 60px;\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            border-radius: 12px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            color: white;\n            font-size: 24px;\n        }\n\n        .header-info {\n            flex: 1;\n        }\n\n        .dashboard-title {\n            font-size: 1.875rem;\n            font-weight: 700;\n            margin: 0 0 0.25rem 0;\n            color: #1f2937;\n        }\n\n        .dashboard-description {\n            color: #6b7280;\n            margin: 0 0 0.5rem 0;\n        }\n\n        .version-badge {\n            display: inline-block;\n            padding: 0.25rem 0.75rem;\n            background: #e5e7eb;\n            color: #4b5563;\n            border-radius: 999px;\n            font-size: 0.875rem;\n            font-weight: 500;\n        }\n\n        .header-actions {\n            display: flex;\n            gap: 0.75rem;\n        }\n\n        .btn-secondary {\n            display: inline-flex;\n            align-items: center;\n            gap: 0.5rem;\n            padding: 0.5rem 1rem;\n            background: white;\n            border: 1px solid #e5e7eb;\n            border-radius: 0.5rem;\n            color: #4b5563;\n            font-weight: 500;\n            cursor: pointer;\n            transition: all 0.2s;\n        }\n\n        .btn-secondary:hover {\n            background: #f9fafb;\n            border-color: #d1d5db;\n        }\n\n        .stats-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n            gap: 1.5rem;\n            margin-bottom: 2rem;\n        }\n\n        .stat-card {\n            background: white;\n            border-radius: 12px;\n            padding: 1.5rem;\n            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n            display: flex;\n            align-items: center;\n            gap: 1rem;\n        }\n\n        .stat-icon {\n            width: 48px;\n            height: 48px;\n            border-radius: 10px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 20px;\n        }\n\n        .stat-blue .stat-icon {\n            background: rgba(59, 130, 246, 0.1);\n            color: #3b82f6;\n        }\n\n        .stat-green .stat-icon {\n            background: rgba(16, 185, 129, 0.1);\n            color: #10b981;\n        }\n\n        .stat-purple .stat-icon {\n            background: rgba(139, 92, 246, 0.1);\n            color: #8b5cf6;\n        }\n\n        .stat-orange .stat-icon {\n            background: rgba(251, 146, 60, 0.1);\n            color: #fb923c;\n        }\n\n        .stat-red .stat-icon {\n            background: rgba(239, 68, 68, 0.1);\n            color: #ef4444;\n        }\n\n        .stat-content {\n            flex: 1;\n        }\n\n        .stat-value {\n            font-size: 1.5rem;\n            font-weight: 700;\n            color: #1f2937;\n            margin-bottom: 0.25rem;\n        }\n\n        .stat-label {\n            color: #6b7280;\n            font-size: 0.875rem;\n        }\n\n        .stat-change {\n            display: inline-flex;\n            align-items: center;\n            gap: 0.25rem;\n            margin-top: 0.5rem;\n            font-size: 0.875rem;\n            font-weight: 500;\n        }\n\n        .stat-change i {\n            width: 14px;\n            height: 14px;\n        }\n\n        .trend-up {\n            color: #10b981;\n        }\n\n        .trend-down {\n            color: #ef4444;\n        }\n\n        .trend-neutral {\n            color: #6b7280;\n        }\n\n        .dashboard-tabs {\n            background: white;\n            border-radius: 12px;\n            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n            overflow: hidden;\n        }\n\n        .tabs-header {\n            display: flex;\n            border-bottom: 1px solid #e5e7eb;\n            background: #f9fafb;\n        }\n\n        .tab-button {\n            padding: 1rem 1.5rem;\n            background: transparent;\n            border: none;\n            color: #6b7280;\n            font-weight: 500;\n            cursor: pointer;\n            display: inline-flex;\n            align-items: center;\n            gap: 0.5rem;\n            position: relative;\n            transition: all 0.2s;\n        }\n\n        .tab-button:hover {\n            color: #4b5563;\n            background: rgba(0, 0, 0, 0.02);\n        }\n\n        .tab-button.active {\n            color: #3b82f6;\n            background: white;\n        }\n\n        .tab-button.active::after {\n            content: '';\n            position: absolute;\n            bottom: -1px;\n            left: 0;\n            right: 0;\n            height: 2px;\n            background: #3b82f6;\n        }\n\n        .tab-button i {\n            width: 18px;\n            height: 18px;\n        }\n\n        .tabs-content {\n            padding: 1.5rem;\n        }\n\n        .dashboard-content {\n            background: white;\n            border-radius: 12px;\n            padding: 1.5rem;\n            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n        }\n    </style><script>\n        function switchDashboardTab(tabId) {\n            // Update active tab button\n            document.querySelectorAll('.tab-button').forEach(btn => {\n                if (btn.dataset.tab === tabId) {\n                    btn.classList.add('active');\n                } else {\n                    btn.classList.remove('active');\n                }\n            });\n            \n            // Update tab content\n            document.querySelectorAll('.tab-content').forEach(content => {\n                if (content.dataset.tabContent === tabId) {\n                    content.style.display = 'block';\n                } else {\n                    content.style.display = 'none';\n                }\n            });\n        }\n\n        function refreshDashboard() {\n            // Trigger dashboard refresh\n            if (window.htmx) {\n                htmx.trigger(document.querySelector('.extension-dashboard'), 'refresh');\n            }\n        }\n\n        function openExtensionSettings() {\n            // Open extension settings modal or navigate to settings page\n            const extensionName = document.querySelector('.dashboard-title').textContent;\n            window.location.href = `/extensions?settings=${encodeURIComponent(extensionName)}`;\n        }\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
