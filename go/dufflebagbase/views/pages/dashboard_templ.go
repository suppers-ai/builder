// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"encoding/json"
	"fmt"
	"github.com/suppers-ai/dufflebagbase/services"
	"github.com/suppers-ai/dufflebagbase/views/layouts"
)

type DashboardData struct {
	UserEmail string
	Stats     services.DashboardStats
}

func DashboardContent(data DashboardData) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<style>\n        /* Compact dashboard layout overrides */\n        .dashboard-container {\n            padding: 0.75rem !important;\n            gap: 0.75rem !important;\n        }\n        .stats-overview, .stats-grid {\n            gap: 0.5rem !important;\n            margin-bottom: 0.75rem !important;\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n        }\n        .stats-overview {\n            grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));\n        }\n        .stat-card {\n            padding: 0.75rem !important;\n            margin: 0 !important;\n            min-height: auto !important;\n        }\n        .stat-card h3 {\n            font-size: 0.8rem !important;\n            margin-bottom: 0.25rem !important;\n            font-weight: 600;\n        }\n        .stat-value {\n            font-size: 1.25rem !important;\n            margin: 0.25rem 0 !important;\n            font-weight: bold;\n        }\n        .stat-label {\n            font-size: 0.7rem !important;\n            opacity: 0.8;\n        }\n        .stat-icon {\n            width: 32px !important;\n            height: 32px !important;\n            margin-right: 0.5rem !important;\n        }\n        .chart-card {\n            padding: 0.75rem !important;\n            margin-bottom: 0.75rem !important;\n        }\n        .chart-header {\n            margin-bottom: 0.5rem !important;\n        }\n        .chart-header h3 {\n            font-size: 0.9rem !important;\n            font-weight: 600;\n        }\n        .chart-subtitle {\n            font-size: 0.7rem !important;\n            opacity: 0.7;\n        }\n        .charts-section {\n            gap: 0.75rem !important;\n            margin-bottom: 0.75rem !important;\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n        }\n        .collections-section {\n            padding-top: 0 !important;\n        }\n        .section-header {\n            margin-bottom: 0.75rem !important;\n            padding-bottom: 0.5rem !important;\n        }\n        .collections-grid {\n            gap: 0.5rem !important;\n        }\n        .collection-card {\n            padding: 0.5rem !important;\n        }\n        .chart-container {\n            height: 180px !important;\n        }\n        .gauge-stat {\n            display: flex;\n            flex-direction: column;\n            align-items: flex-start;\n            text-align: left;\n        }\n        .gauge-header {\n            display: flex;\n            align-items: center;\n            gap: 0.5rem;\n            margin-bottom: 0.5rem;\n        }\n        .gauge-container {\n            position: relative;\n            margin-bottom: 0.25rem;\n        }\n        .gauge-value {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            font-size: 1rem;\n            font-weight: bold;\n            color: #1f2937;\n        }\n        #cpuGauge, #memoryGauge, #diskGauge {\n            width: 100px !important;\n            height: 100px !important;\n        }\n        .gauge-stats {\n            text-align: left;\n        }\n        .storage-section {\n            margin-bottom: 0.75rem;\n        }\n        .storage-section h2 {\n            font-size: 1.1rem !important;\n            margin-bottom: 0.75rem !important;\n            font-weight: 600;\n        }\n        .storage-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n            gap: 0.5rem !important;\n        }\n    </style><div class=\"dashboard-container\"><!-- System Stats with Gauge Charts --><div class=\"stats-overview\"><div class=\"stat-card gauge-stat\"><div class=\"gauge-header\"><div class=\"stat-icon cpu-icon\"><i data-lucide=\"cpu\"></i></div><h3>CPU Usage</h3></div><div class=\"gauge-container\"><canvas id=\"cpuGauge\" width=\"100\" height=\"100\"></canvas><div class=\"gauge-value\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%.1f%%", data.Stats.SystemStats.CPUUsage))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/pages/dashboard.templ`, Line: 150, Col: 101}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</div></div><div class=\"gauge-stats\"><div class=\"stat-label\">System Load</div></div></div><div class=\"stat-card gauge-stat\"><div class=\"gauge-header\"><div class=\"stat-icon memory-icon\"><i data-lucide=\"memory-stick\"></i></div><h3>Memory Usage</h3></div><div class=\"gauge-container\"><canvas id=\"memoryGauge\" width=\"100\" height=\"100\"></canvas><div class=\"gauge-value\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%.1f%%", data.Stats.SystemStats.MemoryUsage))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/pages/dashboard.templ`, Line: 166, Col: 104}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</div></div><div class=\"gauge-stats\"><div class=\"stat-label\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var4 string
		templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(services.FormatBytes(int64(data.Stats.SystemStats.MemoryUsed)))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/pages/dashboard.templ`, Line: 169, Col: 108}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, " / ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var5 string
		templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(services.FormatBytes(int64(data.Stats.SystemStats.MemoryTotal)))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/pages/dashboard.templ`, Line: 169, Col: 178}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "</div></div></div><div class=\"stat-card gauge-stat\"><div class=\"gauge-header\"><div class=\"stat-icon disk-icon\"><i data-lucide=\"hard-drive\"></i></div><h3>Disk Usage</h3></div><div class=\"gauge-container\"><canvas id=\"diskGauge\" width=\"100\" height=\"100\"></canvas><div class=\"gauge-value\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var6 string
		templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%.1f%%", data.Stats.SystemStats.DiskUsage))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/pages/dashboard.templ`, Line: 182, Col: 102}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "</div></div><div class=\"gauge-stats\"><div class=\"stat-label\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var7 string
		templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(services.FormatBytes(int64(data.Stats.SystemStats.DiskUsed)))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/pages/dashboard.templ`, Line: 185, Col: 106}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, " / ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var8 string
		templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(services.FormatBytes(int64(data.Stats.SystemStats.DiskTotal)))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/pages/dashboard.templ`, Line: 185, Col: 174}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "</div></div></div></div><!-- Application Stats Cards --><div class=\"stats-grid\"><div class=\"stat-card\"><div class=\"stat-icon users-icon\"><i data-lucide=\"users\"></i></div><div class=\"stat-content\"><h3>Total Users</h3><div class=\"stat-value\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var9 string
		templ_7745c5c3_Var9, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprint(data.Stats.TotalUsers))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/pages/dashboard.templ`, Line: 198, Col: 79}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var9))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "</div><div class=\"stat-label\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var10 string
		templ_7745c5c3_Var10, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprint(data.Stats.ActiveUsers))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/pages/dashboard.templ`, Line: 199, Col: 80}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var10))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, " active</div></div></div><div class=\"stat-card\"><div class=\"stat-icon api-icon\"><i data-lucide=\"activity\"></i></div><div class=\"stat-content\"><h3>API Activity</h3><div class=\"stat-value\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var11 string
		templ_7745c5c3_Var11, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprint(data.Stats.APIRequests))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/pages/dashboard.templ`, Line: 210, Col: 80}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var11))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "</div><div class=\"stat-label\">Last 24 hours</div></div></div><div class=\"stat-card\"><div class=\"stat-icon uptime-icon\"><i data-lucide=\"clock\"></i></div><div class=\"stat-content\"><h3>Uptime</h3><div class=\"stat-value\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var12 string
		templ_7745c5c3_Var12, templ_7745c5c3_Err = templ.JoinStringErrs(data.Stats.SystemStats.Uptime)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/pages/dashboard.templ`, Line: 221, Col: 75}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var12))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "</div></div></div></div><!-- Storage Statistics Section --><div class=\"storage-section\"><div class=\"storage-grid\"><div class=\"stat-card\"><div class=\"stat-icon\"><i data-lucide=\"database\"></i></div><div class=\"stat-content\"><h3>Total Storage</h3><div class=\"stat-value\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var13 string
		templ_7745c5c3_Var13, templ_7745c5c3_Err = templ.JoinStringErrs(services.FormatBytes(data.Stats.StorageStats["total_size"]))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/pages/dashboard.templ`, Line: 235, Col: 109}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var13))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "</div><div class=\"stat-label\">Used Space</div></div></div><div class=\"stat-card\"><div class=\"stat-icon\"><i data-lucide=\"files\"></i></div><div class=\"stat-content\"><h3>Total Files</h3><div class=\"stat-value\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var14 string
		templ_7745c5c3_Var14, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprint(data.Stats.StorageStats["total_files"]))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/pages/dashboard.templ`, Line: 246, Col: 100}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var14))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "</div><div class=\"stat-label\">All Files</div></div></div><div class=\"stat-card\"><div class=\"stat-icon\"><i data-lucide=\"image\"></i></div><div class=\"stat-content\"><h3>Images</h3><div class=\"stat-value\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var15 string
		templ_7745c5c3_Var15, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprint(data.Stats.StorageStats["total_images"]))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/pages/dashboard.templ`, Line: 257, Col: 101}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var15))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, "</div><div class=\"stat-label\">Image Files</div></div></div><div class=\"stat-card\"><div class=\"stat-icon\"><i data-lucide=\"clock\"></i></div><div class=\"stat-content\"><h3>Recent Files</h3><div class=\"stat-value\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var16 string
		templ_7745c5c3_Var16, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprint(data.Stats.StorageStats["recent_files"]))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/pages/dashboard.templ`, Line: 268, Col: 101}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var16))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, "</div><div class=\"stat-label\">Last 7 days</div></div></div></div></div><!-- Charts Section --><div class=\"charts-section\"><div class=\"chart-card\"><div class=\"chart-header\"><h3>User Growth</h3><span class=\"chart-subtitle\">Last 7 days</span></div><div class=\"chart-container\"><canvas id=\"userGrowthChart\"></canvas></div></div><div class=\"chart-card\"><div class=\"chart-header\"><h3>API Activity</h3><span class=\"chart-subtitle\">Last 24 hours</span></div><div class=\"chart-container\"><canvas id=\"apiActivityChart\"></canvas></div></div></div><!-- System Metrics Section --><div class=\"metrics-section\"><h2 class=\"section-title\">System Metrics</h2><div class=\"stats-grid\" id=\"system-metrics-grid\"><div class=\"stat-card\"><div class=\"stat-icon\"><i data-lucide=\"cpu\"></i></div><div class=\"stat-content\"><h3>CPU Usage</h3><div class=\"stat-value\" id=\"metric-cpu\">--</div><div class=\"stat-label\">Percent</div></div></div><div class=\"stat-card\"><div class=\"stat-icon\"><i data-lucide=\"hard-drive\"></i></div><div class=\"stat-content\"><h3>Memory</h3><div class=\"stat-value\" id=\"metric-memory\">--</div><div class=\"stat-label\">Used</div></div></div><div class=\"stat-card\"><div class=\"stat-icon\"><i data-lucide=\"database\"></i></div><div class=\"stat-content\"><h3>Disk Usage</h3><div class=\"stat-value\" id=\"metric-disk\">--</div><div class=\"stat-label\">Used</div></div></div><div class=\"stat-card\"><div class=\"stat-icon\"><i data-lucide=\"network\"></i></div><div class=\"stat-content\"><h3>Network I/O</h3><div class=\"stat-value\" id=\"metric-network\">--</div><div class=\"stat-label\">Total</div></div></div><div class=\"stat-card\"><div class=\"stat-icon\"><i data-lucide=\"activity\"></i></div><div class=\"stat-content\"><h3>Requests/sec</h3><div class=\"stat-value\" id=\"metric-rps\">--</div><div class=\"stat-label\">RPS</div></div></div><div class=\"stat-card\"><div class=\"stat-icon\"><i data-lucide=\"zap\"></i></div><div class=\"stat-content\"><h3>Goroutines</h3><div class=\"stat-value\" id=\"metric-goroutines\">--</div><div class=\"stat-label\">Active</div></div></div><div class=\"stat-card\"><div class=\"stat-icon\"><i data-lucide=\"thermometer\"></i></div><div class=\"stat-content\"><h3>Load Average</h3><div class=\"stat-value\" id=\"metric-load\">--</div><div class=\"stat-label\">1m average</div></div></div><div class=\"stat-card\"><div class=\"stat-icon\"><i data-lucide=\"clock\"></i></div><div class=\"stat-content\"><h3>Uptime</h3><div class=\"stat-value\" id=\"metric-uptime\">--</div><div class=\"stat-label\">Duration</div></div></div></div></div></div><!-- Chart.js for graphs --><script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script><script src=\"/static/js/dashboard.js\"></script><!-- Pass data to JavaScript and initialize --><script>\n        (function() {\n            // Set dashboard data\n            window.dashboardData = {\n                userGrowth: ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var17, templ_7745c5c3_Err := templruntime.ScriptContentOutsideStringLiteral(marshalJSON(data.Stats.UserGrowth))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/pages/dashboard.templ`, Line: 403, Col: 65}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var17)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 17, ",\n                apiActivity: ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var18, templ_7745c5c3_Err := templruntime.ScriptContentOutsideStringLiteral(marshalJSON(data.Stats.APIActivity))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/pages/dashboard.templ`, Line: 404, Col: 67}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var18)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 18, ",\n                logStats: ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var19, templ_7745c5c3_Err := templruntime.ScriptContentOutsideStringLiteral(marshalJSON(data.Stats.LogStats))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/pages/dashboard.templ`, Line: 405, Col: 61}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var19)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 19, ",\n                systemStats: {\n                    cpuUsage: ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var20, templ_7745c5c3_Err := templruntime.ScriptContentOutsideStringLiteral(fmt.Sprintf("%.1f", data.Stats.SystemStats.CPUUsage))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/pages/dashboard.templ`, Line: 407, Col: 85}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var20)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 20, ",\n                    memoryUsage: ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var21, templ_7745c5c3_Err := templruntime.ScriptContentOutsideStringLiteral(fmt.Sprintf("%.1f", data.Stats.SystemStats.MemoryUsage))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/pages/dashboard.templ`, Line: 408, Col: 91}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var21)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 21, ",\n                    diskUsage: ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var22, templ_7745c5c3_Err := templruntime.ScriptContentOutsideStringLiteral(fmt.Sprintf("%.1f", data.Stats.SystemStats.DiskUsage))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/pages/dashboard.templ`, Line: 409, Col: 87}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var22)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 22, "\n                }\n            };\n            \n            // Function to try initialization\n            function tryInitialize() {\n                if (typeof window.initializeDashboard === 'function') {\n                    console.log('Initializing dashboard from inline script');\n                    window.initializeDashboard();\n                } else {\n                    console.log('Dashboard function not ready, retrying...');\n                    setTimeout(tryInitialize, 100);\n                }\n            }\n            \n            // Start initialization with a small delay to ensure scripts are loaded\n            setTimeout(tryInitialize, 100);\n        })();\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func DashboardPage(data DashboardData) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var23 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var23 == nil {
			templ_7745c5c3_Var23 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var24 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = DashboardContent(data).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = layouts.Base(layouts.BaseProps{
			Title:     "Dashboard",
			UserEmail: data.UserEmail,
		}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var24), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func DashboardPartial(data DashboardData) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var25 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var25 == nil {
			templ_7745c5c3_Var25 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var26 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = DashboardContent(data).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = layouts.PartialContent("Dashboard").Render(templ.WithChildren(ctx, templ_7745c5c3_Var26), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// Helper functions
func formatUptime(seconds int64) string {
	days := seconds / 86400
	hours := (seconds % 86400) / 3600
	minutes := (seconds % 3600) / 60

	if days > 0 {
		return fmt.Sprintf("%dd %dh", days, hours)
	} else if hours > 0 {
		return fmt.Sprintf("%dh %dm", hours, minutes)
	}
	return fmt.Sprintf("%dm", minutes)
}

func marshalJSON(data interface{}) string {
	bytes, err := json.Marshal(data)
	if err != nil {
		return "[]"
	}
	return string(bytes)
}

var _ = templruntime.GeneratedTemplate
