version: '3.8'

services:
  # SortedStorage Frontend
  sortedstorage:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sortedstorage
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - VITE_API_URL=${VITE_API_URL:-http://solobase:8090}
      - VITE_WS_URL=${VITE_WS_URL:-ws://solobase:8090}
      - VITE_APP_URL=${VITE_APP_URL:-http://localhost:3000}
    depends_on:
      solobase:
        condition: service_started
    networks:
      - storage-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Solobase Backend
  solobase:
    image: solobase:latest
    container_name: solobase
    ports:
      - "8090:8090"
    environment:
      - DATABASE_TYPE=sqlite
      - DATABASE_URL=file:./.data/solobase.db
      - DEFAULT_ADMIN_EMAIL=admin@sortedstorage.com
      - DEFAULT_ADMIN_PASSWORD=AdminSecurePass2024!
      - STORAGE_TYPE=local
      - STORAGE_PATH=/data/storage
      - JWT_SECRET=your-secret-key-change-this-in-production
      - CORS_ORIGINS=http://localhost:3000,http://sortedstorage:3000
    volumes:
      - solobase-data:/data
      - solobase-storage:/data/storage
    networks:
      - storage-network
    restart: unless-stopped

  # Optional: PostgreSQL for production
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      - POSTGRES_DB=solobase
      - POSTGRES_USER=solobase
      - POSTGRES_PASSWORD=solobase-password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - storage-network
    profiles:
      - production
    restart: unless-stopped

  # Optional: Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: redis
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - storage-network
    profiles:
      - production
    restart: unless-stopped

networks:
  storage-network:
    driver: bridge

volumes:
  solobase-data:
  solobase-storage:
  postgres-data:
  redis-data: